@model PaginationViewModel<ActualState>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                 <input id="checkCentral" type="checkbox" />
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Circle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().TypeObject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().TypeConsultor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().TimePlanned)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Person)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().RealTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Delivered)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Productivity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().DateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().FinalValue)
            </th>
            <th>
                <button id="botaoDeletar" type="button" style=" border-color:transparent;background-color:none">
                    <i class="fas fa-trash" style="color: #ff0000;">/</i>
                </button>
            </th>
        </tr>
    </thead>
   @* <tfoot style="display: table-header-group;">
        <tr>
            <th>
                <input id="chkAll" type="checkbox" class="form-check-input" style="position: initial !important"/>
            </th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </tfoot>*@
    <tbody>
       @* @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    <input name="checkSelect" type="checkbox" value="@item.Id" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }*@


@foreach (var item in Model.Items) {
        <tr>
            <td>
                    <input name="checkSelect" type="checkbox" value="@item.Id" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Circle.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeObject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeConsultor.Fee)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimePlanned)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Person.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RealTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Delivered)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Productivity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FinalValue)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<partial name ="_paginator" />

@section scripts
    {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $("#checkCentral").click(function () {
                //verifica se o botão que possui o id checkcentral foi pressionado
                //encontra todas as tags input que possuem a propriedade name = checkselect
                //troca a propriedade checked pelo valor que o botão id checkcentral possui
                $("input[name='checkSelect']").prop('checked', $(this).prop('checked'));
                if ($(this).prop('checked'))
                    $("#botaoDeletar").show();
                else
                    $("#botaoDeletar").hide();
            });

            $("input[name='checkSelect']").click(function () {
                if ($(this).prop('checked')) {
                    $("#botaoDeletar").show();
                }
                else {
                    $("#botaoDeletar").hide();
                }
            });

            $("input[name='checkSelect']").click(function () {
                var idSelecionados = $("input[name='checkSelect']:checked").length;

                if ($(this).is(':checked') || idSelecionados > 0) {
                    $("#botaoDeletar").show();
                }
                else {
                    $("#botaoDeletar").hide();
                    $("#checkCentral").prop('checked', false);
                }

            });

            $("#botaoDeletar").click(function () {
                var idsSelecionados = $("input[name='checkSelect']:checked").map(function () {
                    return $(this).val();
                }).get();
                //map: é como um foreach para arrays
                //gera uma informação nova

                //via html
                if (idsSelecionados.length > 0) {
                    if (confirm("você tem certeza de que deseja deletar este(s) registro(s)?")) {
                        $.ajax({
                            url: '@Url.Action("MultipleDelete", "ActualStates")',
                            type: 'post',
                            data: { ids: idsSelecionados }, //passa na url as informações
                            success: function () {
                                location.reload()
                            },
                            error: function () {
                                alert("um erro ocorreu ao tentar deletar estes(s) registro(s).")
                            }
                        });
                    }
                }
                else {
                    alert("por favor, selecione pelo menos um item para ser deletado")
                }
            });
        });
    </script>
}
