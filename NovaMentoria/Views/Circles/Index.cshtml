@model PaginationViewModel<Circle>
@{
    ViewData["Title"] = "Index";
}



<h1>index</h1>

<p>
    <a asp-action="create">create new</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <input id="checkcentral" type="checkbox" />
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Name)
            </th>
            <th>
                <button id="botaoDeletar" type="button" style=" border-color:transparent;background-color:none">
                    <i class="fas fa-trash" style="color: #ff0000;">/</i>
                </button>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    <input name="checkSelect" type="checkbox" value="@item.Id" />
                </td>
                <td>
                    @Html.DisplayFor(modelitem => item.Name)
                </td>
                <td>
                    <a asp-action="edit" asp-route-id="@item.Id">edit</a> |
                    <a asp-action="details" asp-route-id="@item.Id">details</a> |
                    <a asp-action="delete" asp-route-id="@item.Id">delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<partial name="_paginator" />
@*@<div>
    <ul class="pagination pagination-sn n-0 float-right">
        @if (model.pagenumber > 1)
        {
            <li class="page-item">
                <a class=page-link asp-action="index" asp-route-pagenumber="@(model.pagenumber -1)" asp-route-pagesize="@(model.pagesize)">←</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class=page-link href="#">←</a>
            </li>
        }
        @for (int i = 1; i <= math.ceiling(model.totalcount / (double)model.pagesize); i++)
        {
            @if (i == model.pagenumber)
            {
                <li class="page-item">
                    <a class="page-link" href="#">@i</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="index" asp-route-pagenimber="@i" asp-route-pagesize="@(model.pagesize)">@i</a>
                </li>

            }
        }
        @if (model.pagenumber < math.ceiling(model.totalcount / (double)model.pagesize))
        {
            <li class="page-item">
                <a class="page-link" asp-action="index" asp-route-pagenumber="@(model.pagenumber +1)" asp-route-pagesize="@(model.pagesize)">→</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" href="#">→</a>
            </li>
        }

    </ul>
</div>*@





@section Scripts
    {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>




        $(document).ready(function () {

           
            $("#checkCentral").click(function () {
                //Verifica se o botão que possui o id checkCentral foi pressionado
                //Encontra todas as tags input que possuem a propriedade name = checkSelect
                //Troca a propriedade checked pelo valor que o botão id checkCentral possui
                $("input[name='checkSelect']").prop('checked', $(this).prop('checked'));
                if ($(this).prop('checked'))
                    $("#botaoDeletar").show();
                else
                    $("#botaoDeletar").hide();
            });

            $("input[name='checkSelect']").click(function () {
                if ($(this).prop('checked')) {
                    $("#botaoDeletar").show();
                }
                else {
                    $("#botaoDeletar").hide();
                }
            });

            $("input[name='checkSelect']").click(function () {
                var IdSelecionados = $("input[name='checkSelect']:checked").length;

                if ($(this).is(':checked') || IdSelecionados > 0) {
                    $("#botaoDeletar").show();
                }
                else {
                    $("#botaoDeletar").hide();
                    $("#checkCentral").prop('checked', false);
                }

            });

            $("#botaoDeletar").click(function () {
                var idsSelecionados = $("input[name='checkSelect']:checked").map(function () {
                    return $(this).val();
                }).get();
                //Map: é como um foreach para arrays
                //Gera uma informação nova

                //Via HTML
                if (idsSelecionados.length > 0) {
                    if (confirm("Você tem certeza de que deseja deletar este(s) registro(s)?")) {
                        $.ajax({
                            url: '@Url.Action("MultipleDelete", "Circles")',
                            type: 'POST',
                            data: { ids: idsSelecionados }, //Passa na URl as informações
                            success: function () {
                                location.reload()
                            },
                            error: function () {
                                alert("Um erro ocorreu ao tentar deletar estes(s) registro(s).")
                            }
                        });
                    }
                }
                else {
                    alert("Por favor, selecione pelo menos um item para ser deletado")
                }
            });
        });
    </script>
}
